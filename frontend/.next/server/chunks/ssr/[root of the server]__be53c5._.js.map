{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rochanvanam/Documents/python_projects/AxxessDeezFacts/frontend/src/components/CounterForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CounterForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call CounterForm() from the server but CounterForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CounterForm.tsx <module evaluation>\",\n    \"CounterForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,gEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/rochanvanam/Documents/python_projects/AxxessDeezFacts/frontend/src/components/CounterForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CounterForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call CounterForm() from the server but CounterForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CounterForm.tsx\",\n    \"CounterForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/rochanvanam/Documents/python_projects/AxxessDeezFacts/frontend/src/models/Schema.ts"],"sourcesContent":["import { integer, pgTable, serial, timestamp } from 'drizzle-orm/pg-core';\n\n// This file defines the structure of your database tables using the Drizzle ORM.\n\n// To modify the database schema:\n// 1. Update this file with your desired changes.\n// 2. Generate a new migration by running: `npm run db:generate`\n\n// The generated migration file will reflect your schema changes.\n// The migration is automatically applied during the next database interaction,\n// so there's no need to run it manually or restart the Next.js server.\n\nexport const counterSchema = pgTable('counter', {\n  id: serial('id').primaryKey(),\n  count: integer('count').default(0),\n  updatedAt: timestamp('updated_at', { mode: 'date' })\n    .defaultNow()\n    .$onUpdate(() => new Date())\n    .notNull(),\n  createdAt: timestamp('created_at', { mode: 'date' }).defaultNow().notNull(),\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AAAA;;AAYO,MAAM,gBAAgB,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,WAAW;IAC9C,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,OAAO,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,SAAS,OAAO,CAAC;IAChC,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc;QAAE,MAAM;IAAO,GAC/C,UAAU,GACV,SAAS,CAAC,IAAM,IAAI,QACpB,OAAO;IACV,WAAW,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,cAAc;QAAE,MAAM;IAAO,GAAG,UAAU,GAAG,OAAO;AAC3E"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/rochanvanam/Documents/python_projects/AxxessDeezFacts/frontend/src/libs/DB.ts"],"sourcesContent":["import type { PgliteDatabase } from 'drizzle-orm/pglite';\nimport path from 'node:path';\nimport * as schema from '@/models/Schema';\nimport { PGlite } from '@electric-sql/pglite';\nimport { drizzle as drizzlePg } from 'drizzle-orm/node-postgres';\nimport { migrate as migratePg } from 'drizzle-orm/node-postgres/migrator';\nimport { drizzle as drizzlePglite } from 'drizzle-orm/pglite';\nimport { migrate as migratePglite } from 'drizzle-orm/pglite/migrator';\nimport { PHASE_PRODUCTION_BUILD } from 'next/dist/shared/lib/constants';\nimport { Client } from 'pg';\nimport { Env } from './Env';\n\nlet client;\nlet drizzle;\n\nif (process.env.NEXT_PHASE !== PHASE_PRODUCTION_BUILD && Env.DATABASE_URL) {\n  client = new Client({\n    connectionString: Env.DATABASE_URL,\n  });\n  await client.connect();\n\n  drizzle = drizzlePg(client, { schema });\n  await migratePg(drizzle, {\n    migrationsFolder: path.join(process.cwd(), 'migrations'),\n  });\n} else {\n  // Stores the db connection in the global scope to prevent multiple instances due to hot reloading with Next.js\n  const global = globalThis as unknown as { client: PGlite; drizzle: PgliteDatabase<typeof schema> };\n\n  if (!global.client) {\n    global.client = new PGlite();\n    await global.client.waitReady;\n\n    global.drizzle = drizzlePglite(global.client, { schema });\n  }\n\n  drizzle = global.drizzle;\n  await migratePglite(global.drizzle, {\n    migrationsFolder: path.join(process.cwd(), 'migrations'),\n  });\n}\n\nexport const db = drizzle;\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AAKA;AACA;AACA;AAJA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;AAOA,IAAI;AACJ,IAAI;AAEJ,IAAI,QAAQ,GAAG,CAAC,UAAU,KAAK,0JAAA,CAAA,yBAAsB,IAAI,kHAAA,CAAA,MAAG,CAAC,YAAY,EAAE;IACzE,SAAS,IAAI,6FAAA,CAAA,SAAM,CAAC;QAClB,kBAAkB,kHAAA,CAAA,MAAG,CAAC,YAAY;IACpC;IACA,MAAM,OAAO,OAAO;IAEpB,UAAU,CAAA,GAAA,4JAAA,CAAA,UAAS,AAAD,EAAE,QAAQ;QAAE,QAAA;IAAO;IACrC,MAAM,CAAA,GAAA,8JAAA,CAAA,UAAS,AAAD,EAAE,SAAS;QACvB,kBAAkB,iHAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAC7C;AACF,OAAO;IACL,+GAA+G;IAC/G,MAAM,SAAS;IAEf,IAAI,CAAC,OAAO,MAAM,EAAE;QAClB,OAAO,MAAM,GAAG,IAAI,sJAAA,CAAA,SAAM;QAC1B,MAAM,OAAO,MAAM,CAAC,SAAS;QAE7B,OAAO,OAAO,GAAG,CAAA,GAAA,kJAAA,CAAA,UAAa,AAAD,EAAE,OAAO,MAAM,EAAE;YAAE,QAAA;QAAO;IACzD;IAEA,UAAU,OAAO,OAAO;IACxB,MAAM,CAAA,GAAA,oJAAA,CAAA,UAAa,AAAD,EAAE,OAAO,OAAO,EAAE;QAClC,kBAAkB,iHAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAC7C;AACF;AAEO,MAAM,KAAK"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/rochanvanam/Documents/python_projects/AxxessDeezFacts/frontend/src/components/CurrentCount.tsx"],"sourcesContent":["import { db } from '@/libs/DB';\nimport { logger } from '@/libs/Logger';\nimport { counterSchema } from '@/models/Schema';\nimport { eq } from 'drizzle-orm';\nimport { getTranslations } from 'next-intl/server';\nimport { headers } from 'next/headers';\n\nexport const CurrentCount = async () => {\n  const t = await getTranslations('CurrentCount');\n\n  // `x-e2e-random-id` is used for end-to-end testing to make isolated requests\n  // The default value is 0 when there is no `x-e2e-random-id` header\n  const id = Number((await headers()).get('x-e2e-random-id')) ?? 0;\n  const result = await db.query.counterSchema.findMany({\n    where: eq(counterSchema.id, id),\n  });\n  const count = result[0]?.count ?? 0;\n\n  logger.info('Counter fetched successfully');\n\n  return (\n    <div>\n      {t('count', { count })}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAGA;AADA;AADA;;;;;;;;;;;;;AAIO,MAAM,eAAe;IAC1B,MAAM,IAAI,MAAM,CAAA,GAAA,yOAAA,CAAA,kBAAe,AAAD,EAAE;IAEhC,6EAA6E;IAC7E,mEAAmE;IACnE,MAAM,KAAK,OAAO,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,uBAAuB;IAC/D,MAAM,SAAS,MAAM,iHAAA,CAAA,KAAE,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC;QACnD,OAAO,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,uHAAA,CAAA,gBAAa,CAAC,EAAE,EAAE;IAC9B;IACA,MAAM,QAAQ,MAAM,CAAC,EAAE,EAAE,SAAS;IAElC,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC;IAEZ,qBACE,8OAAC;kBACE,EAAE,SAAS;YAAE;QAAM;;;;;;AAG1B"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///Users/rochanvanam/Documents/python_projects/AxxessDeezFacts/frontend/src/app/%5Blocale%5D/%28marketing%29/counter/page.tsx"],"sourcesContent":["import { CounterForm } from '@/components/CounterForm';\nimport { CurrentCount } from '@/components/CurrentCount';\nimport { useTranslations } from 'next-intl';\nimport { getTranslations } from 'next-intl/server';\nimport Image from 'next/image';\nimport { Suspense } from 'react';\n\nexport async function generateMetadata(props: {\n  params: Promise<{ locale: string }>;\n}) {\n  const { locale } = await props.params;\n  const t = await getTranslations({\n    locale,\n    namespace: 'Counter',\n  });\n\n  return {\n    title: t('meta_title'),\n    description: t('meta_description'),\n  };\n}\n\nexport default function Counter() {\n  const t = useTranslations('Counter');\n\n  return (\n    <>\n      <CounterForm />\n\n      <div className=\"mt-3\">\n        <Suspense fallback={<p>{t('loading_counter')}</p>}>\n          <CurrentCount />\n        </Suspense>\n      </div>\n\n      <div className=\"mt-5 text-center text-sm\">\n        {`${t('security_powered_by')} `}\n        <a\n          className=\"text-blue-700 hover:border-b-2 hover:border-blue-700\"\n          href=\"https://launch.arcjet.com/Q6eLbRE\"\n        >\n          Arcjet\n        </a>\n      </div>\n\n      <a\n        href=\"https://launch.arcjet.com/Q6eLbRE\"\n      >\n        <Image\n          className=\"mx-auto mt-2\"\n          src=\"/assets/images/arcjet-light.svg\"\n          alt=\"Arcjet\"\n          width={128}\n          height={38}\n        />\n      </a>\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAGA;AACA;AAHA;AACA;;;;;;;;;;;;AAIO,eAAe,iBAAiB,KAEtC;IACC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,MAAM,MAAM;IACrC,MAAM,IAAI,MAAM,CAAA,GAAA,yOAAA,CAAA,kBAAe,AAAD,EAAE;QAC9B;QACA,WAAW;IACb;IAEA,OAAO;QACL,OAAO,EAAE;QACT,aAAa,EAAE;IACjB;AACF;AAEe,SAAS;IACtB,MAAM,IAAI,CAAA,GAAA,+NAAA,CAAA,kBAAe,AAAD,EAAE;IAE1B,qBACE;;0BACE,8OAAC,iIAAA,CAAA,cAAW;;;;;0BAEZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,qMAAA,CAAA,WAAQ;oBAAC,wBAAU,8OAAC;kCAAG,EAAE;;;;;;8BACxB,cAAA,8OAAC,kIAAA,CAAA,eAAY;;;;;;;;;;;;;;;0BAIjB,8OAAC;gBAAI,WAAU;;oBACZ,GAAG,EAAE,uBAAuB,CAAC,CAAC;kCAC/B,8OAAC;wBACC,WAAU;wBACV,MAAK;kCACN;;;;;;;;;;;;0BAKH,8OAAC;gBACC,MAAK;0BAEL,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBACJ,WAAU;oBACV,KAAI;oBACJ,KAAI;oBACJ,OAAO;oBACP,QAAQ;;;;;;;;;;;;;AAKlB"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///Users/rochanvanam/Documents/python_projects/AxxessDeezFacts/frontend/src/libs/Logger.ts"],"sourcesContent":["import type { DestinationStream } from 'pino';\nimport logtail from '@logtail/pino';\nimport pino from 'pino';\nimport pretty from 'pino-pretty';\nimport { Env } from './Env';\n\nlet stream: DestinationStream;\n\nif (Env.LOGTAIL_SOURCE_TOKEN) {\n  stream = pino.multistream([\n    await logtail({\n      sourceToken: Env.LOGTAIL_SOURCE_TOKEN,\n      options: {\n        sendLogsToBetterStack: true,\n      },\n    }),\n    {\n      stream: pretty(), // Prints logs to the console\n    },\n  ]);\n} else {\n  stream = pretty({\n    colorize: true,\n  });\n}\n\nexport const logger = pino({ base: undefined }, stream);\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;;;;;AAEA,IAAI;AAEJ,IAAI,kHAAA,CAAA,MAAG,CAAC,oBAAoB,EAAE;IAC5B,SAAS,4HAAA,CAAA,UAAI,CAAC,WAAW,CAAC;QACxB,MAAM,CAAA,GAAA,yJAAA,CAAA,UAAO,AAAD,EAAE;YACZ,aAAa,kHAAA,CAAA,MAAG,CAAC,oBAAoB;YACrC,SAAS;gBACP,uBAAuB;YACzB;QACF;QACA;YACE,QAAQ,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD;QACf;KACD;AACH,OAAO;IACL,SAAS,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;QACd,UAAU;IACZ;AACF;AAEO,MAAM,SAAS,CAAA,GAAA,4HAAA,CAAA,UAAI,AAAD,EAAE;IAAE,MAAM;AAAU,GAAG"}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}